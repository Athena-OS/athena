name: Build ArchISO Stable
on:
  # push:
  workflow_dispatch:
  #schedule:
  #   - cron:  '0 0 */7 * *'
  
jobs:
  build:
    env:
      ATHENA_ID: 'athenaos'
      ATHENA_VERSION: 'rolling'
      ISO_VERSION: 'live' # It must be the same on profiledef.sh and build-iso.sh
      ISO_ARCHITECTURE: 'x86_64'
    runs-on: ubuntu-latest
    container:
      image: athenaos/base-devel:latest
      options: --privileged 
    steps:
      - name: Checkout files
        uses: actions/checkout@v5

      - name: Init Keys
        run: | 
          rm -rf /etc/pacman.d/gnupg
          pacman-key --init
          pacman-key --populate
          pacman -Syy

      - name: Install rate-mirrors
        run: pacman -Syyu --noconfirm rate-mirrors

      - name: Set fastest mirrors
        run: |
          rate-mirrors --concurrency 40 --disable-comments --allow-root --save /etc/pacman.d/mirrorlist arch
          rate-mirrors --concurrency 40 --disable-comments --allow-root --save /etc/pacman.d/blackarch-mirrorlist blackarch
          rate-mirrors --concurrency 40 --disable-comments --allow-root --save /etc/pacman.d/chaotic-mirrorlist chaotic-aur

      - name: Install dependencies
        run: pacman -Syyu --noconfirm archiso edk2-ovmf git github-cli gnupg openssh openssl qemu-desktop rsync sshpass wget # Install also optional deps for archiso
        
      - name: Build ArchISO
        run: |
          cd scripts
          ./build-iso.sh
          
      - name: Upload to Athena OS Mirror
        run: |
          sshpass -p "${{ secrets.MIRROR_SECRET }}" rsync -avzzlr --delete -e "ssh -p 1027 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" $HOME/Athena-Out/${{env.ATHENA_ID}}-${{env.ISO_VERSION}}-${{env.ISO_ARCHITECTURE}}.iso $HOME/Athena-Out/${{env.ATHENA_ID}}-${{env.ISO_VERSION}}-${{env.ISO_ARCHITECTURE}}.iso.md5 $HOME/Athena-Out/${{env.ATHENA_ID}}-${{env.ISO_VERSION}}-${{env.ISO_ARCHITECTURE}}.iso.sha1 $HOME/Athena-Out/${{env.ATHENA_ID}}-${{env.ISO_VERSION}}-${{env.ISO_ARCHITECTURE}}.iso.sha256 $HOME/Athena-Out/${{env.ATHENA_ID}}-${{env.ISO_VERSION}}-${{env.ISO_ARCHITECTURE}}.iso.sha512 ${{ secrets.MIRROR_USER }}@hub.athenaos.org:/srv/mirrors/athena-images/rolling/

      - name: Upload to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/Athena-OS/athena
          cd athena
          for f in $(find $HOME/Athena-Out -name '*.iso*'); do
            gh release upload v25.11 $f --clobber
          done
