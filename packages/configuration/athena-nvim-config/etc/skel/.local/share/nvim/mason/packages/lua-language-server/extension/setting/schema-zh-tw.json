{
    "description": "Setting of sumneko.lua",
    "properties": {
        "completion": {
            "properties": {
                "autoRequire": {
                    "$ref": "#/properties/completion.autoRequire"
                },
                "callSnippet": {
                    "$ref": "#/properties/completion.callSnippet"
                },
                "displayContext": {
                    "$ref": "#/properties/completion.displayContext"
                },
                "enable": {
                    "$ref": "#/properties/completion.enable"
                },
                "keywordSnippet": {
                    "$ref": "#/properties/completion.keywordSnippet"
                },
                "postfix": {
                    "$ref": "#/properties/completion.postfix"
                },
                "requireSeparator": {
                    "$ref": "#/properties/completion.requireSeparator"
                },
                "showParams": {
                    "$ref": "#/properties/completion.showParams"
                },
                "showWord": {
                    "$ref": "#/properties/completion.showWord"
                },
                "workspaceWord": {
                    "$ref": "#/properties/completion.workspaceWord"
                }
            }
        },
        "completion.autoRequire": {
            "default": true,
            "markdownDescription": "輸入內容看起來是個檔名時，自動 `require` 此檔案。",
            "scope": "resource",
            "type": "boolean"
        },
        "completion.callSnippet": {
            "default": "Disable",
            "enum": [
                "Disable",
                "Both",
                "Replace"
            ],
            "markdownDescription": "顯示函式呼叫片段。",
            "markdownEnumDescriptions": [
                "只顯示 `函式名`。",
                "顯示 `函式名` 與 `呼叫片段`。",
                "只顯示 `呼叫片段`。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "completion.displayContext": {
            "default": 0,
            "markdownDescription": "預覽建議的相關程式碼片段，可能可以幫助你瞭解這項建議的用法。設定的數字表示程式碼片段的擷取行數，設定為 `0` 可以停用此功能。",
            "scope": "resource",
            "type": "integer"
        },
        "completion.enable": {
            "default": true,
            "markdownDescription": "啟用自動完成。",
            "scope": "resource",
            "type": "boolean"
        },
        "completion.keywordSnippet": {
            "default": "Replace",
            "enum": [
                "Disable",
                "Both",
                "Replace"
            ],
            "markdownDescription": "顯示關鍵字語法片段。",
            "markdownEnumDescriptions": [
                "只顯示 `關鍵字`。",
                "顯示 `關鍵字` 與 `語法片段`。",
                "只顯示 `語法片段`。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "completion.postfix": {
            "default": "@",
            "markdownDescription": "用於觸發後綴建議的符號。",
            "scope": "resource",
            "type": "string"
        },
        "completion.requireSeparator": {
            "default": ".",
            "markdownDescription": "`require` 時使用的分隔符。",
            "scope": "resource",
            "type": "string"
        },
        "completion.showParams": {
            "default": true,
            "markdownDescription": "在建議列表中顯示函式的參數資訊，函式擁有多個定義時會分開顯示。",
            "scope": "resource",
            "type": "boolean"
        },
        "completion.showWord": {
            "default": "Fallback",
            "enum": [
                "Enable",
                "Fallback",
                "Disable"
            ],
            "markdownDescription": "在建議中顯示上下文單詞。",
            "markdownEnumDescriptions": [
                "總是在建議中顯示上下文單詞。",
                "無法根據語義提供建議時才顯示上下文單詞。",
                "不顯示上下文單詞。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "completion.workspaceWord": {
            "default": true,
            "markdownDescription": "顯示的上下文單詞是否包含工作區中其他檔案的內容。",
            "scope": "resource",
            "type": "boolean"
        },
        "diagnostics": {
            "properties": {
                "disable": {
                    "$ref": "#/properties/diagnostics.disable"
                },
                "disableScheme": {
                    "$ref": "#/properties/diagnostics.disableScheme"
                },
                "enable": {
                    "$ref": "#/properties/diagnostics.enable"
                },
                "globals": {
                    "$ref": "#/properties/diagnostics.globals"
                },
                "groupFileStatus": {
                    "$ref": "#/properties/diagnostics.groupFileStatus"
                },
                "groupSeverity": {
                    "$ref": "#/properties/diagnostics.groupSeverity"
                },
                "ignoredFiles": {
                    "$ref": "#/properties/diagnostics.ignoredFiles"
                },
                "libraryFiles": {
                    "$ref": "#/properties/diagnostics.libraryFiles"
                },
                "neededFileStatus": {
                    "$ref": "#/properties/diagnostics.neededFileStatus"
                },
                "severity": {
                    "$ref": "#/properties/diagnostics.severity"
                },
                "unusedLocalExclude": {
                    "$ref": "#/properties/diagnostics.unusedLocalExclude"
                },
                "workspaceDelay": {
                    "$ref": "#/properties/diagnostics.workspaceDelay"
                },
                "workspaceEvent": {
                    "$ref": "#/properties/diagnostics.workspaceEvent"
                },
                "workspaceRate": {
                    "$ref": "#/properties/diagnostics.workspaceRate"
                }
            }
        },
        "diagnostics.disable": {
            "default": [],
            "items": {
                "enum": [
                    "action-after-return",
                    "ambiguity-1",
                    "ambiguous-syntax",
                    "args-after-dots",
                    "assign-type-mismatch",
                    "await-in-sync",
                    "block-after-else",
                    "break-outside",
                    "cast-local-type",
                    "cast-type-mismatch",
                    "circle-doc-class",
                    "close-non-object",
                    "code-after-break",
                    "codestyle-check",
                    "count-down-loop",
                    "deprecated",
                    "different-requires",
                    "discard-returns",
                    "doc-field-no-class",
                    "duplicate-doc-alias",
                    "duplicate-doc-field",
                    "duplicate-doc-param",
                    "duplicate-index",
                    "duplicate-set-field",
                    "empty-block",
                    "err-assign-as-eq",
                    "err-c-long-comment",
                    "err-comment-prefix",
                    "err-do-as-then",
                    "err-eq-as-assign",
                    "err-esc",
                    "err-nonstandard-symbol",
                    "err-then-as-do",
                    "exp-in-action",
                    "global-in-nil-env",
                    "index-in-func-name",
                    "invisible",
                    "jump-local-scope",
                    "keyword",
                    "local-limit",
                    "lowercase-global",
                    "lua-doc-miss-sign",
                    "luadoc-error-diag-mode",
                    "luadoc-miss-alias-extends",
                    "luadoc-miss-alias-name",
                    "luadoc-miss-arg-name",
                    "luadoc-miss-cate-name",
                    "luadoc-miss-class-extends-name",
                    "luadoc-miss-class-name",
                    "luadoc-miss-diag-mode",
                    "luadoc-miss-diag-name",
                    "luadoc-miss-field-extends",
                    "luadoc-miss-field-name",
                    "luadoc-miss-fun-after-overload",
                    "luadoc-miss-generic-name",
                    "luadoc-miss-local-name",
                    "luadoc-miss-module-name",
                    "luadoc-miss-operator-name",
                    "luadoc-miss-param-extends",
                    "luadoc-miss-param-name",
                    "luadoc-miss-see-name",
                    "luadoc-miss-sign-name",
                    "luadoc-miss-symbol",
                    "luadoc-miss-type-name",
                    "luadoc-miss-vararg-type",
                    "luadoc-miss-version",
                    "malformed-number",
                    "miss-end",
                    "miss-esc-x",
                    "miss-exp",
                    "miss-exponent",
                    "miss-field",
                    "miss-loop-max",
                    "miss-loop-min",
                    "miss-method",
                    "miss-name",
                    "miss-sep-in-table",
                    "miss-space-between",
                    "miss-symbol",
                    "missing-parameter",
                    "missing-return",
                    "missing-return-value",
                    "need-check-nil",
                    "need-paren",
                    "newfield-call",
                    "newline-call",
                    "no-unknown",
                    "no-visible-label",
                    "not-yieldable",
                    "param-type-mismatch",
                    "redefined-label",
                    "redefined-local",
                    "redundant-parameter",
                    "redundant-return",
                    "redundant-return-value",
                    "redundant-value",
                    "return-type-mismatch",
                    "set-const",
                    "spell-check",
                    "trailing-space",
                    "unbalanced-assignments",
                    "undefined-doc-class",
                    "undefined-doc-name",
                    "undefined-doc-param",
                    "undefined-env-child",
                    "undefined-field",
                    "undefined-global",
                    "unexpect-dots",
                    "unexpect-efunc-name",
                    "unexpect-lfunc-name",
                    "unexpect-symbol",
                    "unicode-name",
                    "unknown-attribute",
                    "unknown-cast-variable",
                    "unknown-diag-code",
                    "unknown-operator",
                    "unknown-symbol",
                    "unreachable-code",
                    "unsupport-symbol",
                    "unused-function",
                    "unused-label",
                    "unused-local",
                    "unused-vararg"
                ],
                "type": "string"
            },
            "markdownDescription": "停用的診斷（使用浮框括號內的程式碼）。",
            "scope": "resource",
            "type": "array"
        },
        "diagnostics.disableScheme": {
            "default": [
                "git"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "不診斷使用以下 scheme 的lua檔案。",
            "scope": "resource",
            "type": "array"
        },
        "diagnostics.enable": {
            "default": true,
            "markdownDescription": "啟用診斷。",
            "scope": "resource",
            "type": "boolean"
        },
        "diagnostics.globals": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "已定義的全域變數。",
            "scope": "resource",
            "type": "array"
        },
        "diagnostics.groupFileStatus": {
            "additionalProperties": false,
            "markdownDescription": "批量修改一個組中的檔案狀態。\n\n* Opened:  只診斷打開的檔案\n* Any:     診斷所有檔案\n* None:    停用此診斷\n\n設定為 `Fallback` 意味著組中的診斷由 `diagnostics.neededFileStatus` 單獨設定。\n其他設定將覆蓋單獨設定，但是不會覆蓋以 `!` 結尾的設定。\n",
            "properties": {
                "ambiguity": {
                    "default": "Fallback",
                    "description": "* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "await": {
                    "default": "Fallback",
                    "description": "* await-in-sync\n* not-yieldable",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "codestyle": {
                    "default": "Fallback",
                    "description": "* codestyle-check\n* spell-check",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "duplicate": {
                    "default": "Fallback",
                    "description": "* duplicate-index\n* duplicate-set-field",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "global": {
                    "default": "Fallback",
                    "description": "* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "luadoc": {
                    "default": "Fallback",
                    "description": "* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "redefined": {
                    "default": "Fallback",
                    "description": "* redefined-local",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strict": {
                    "default": "Fallback",
                    "description": "* close-non-object\n* deprecated\n* discard-returns\n* invisible",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strong": {
                    "default": "Fallback",
                    "description": "* no-unknown",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "type-check": {
                    "default": "Fallback",
                    "description": "* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unbalanced": {
                    "default": "Fallback",
                    "description": "* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unused": {
                    "default": "Fallback",
                    "description": "* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Fallback"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "groupFileStatus",
            "type": "object"
        },
        "diagnostics.groupSeverity": {
            "additionalProperties": false,
            "markdownDescription": "批量修改一個組中的診斷等級。\n設定為 `Fallback` 意味著組中的診斷由 `diagnostics.severity` 單獨設定。\n其他設定將覆蓋單獨設定，但是不會覆蓋以 `!` 結尾的設定。\n",
            "properties": {
                "ambiguity": {
                    "default": "Fallback",
                    "description": "* ambiguity-1\n* count-down-loop\n* different-requires\n* newfield-call\n* newline-call",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "await": {
                    "default": "Fallback",
                    "description": "* await-in-sync\n* not-yieldable",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "codestyle": {
                    "default": "Fallback",
                    "description": "* codestyle-check\n* spell-check",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "duplicate": {
                    "default": "Fallback",
                    "description": "* duplicate-index\n* duplicate-set-field",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "global": {
                    "default": "Fallback",
                    "description": "* global-in-nil-env\n* lowercase-global\n* undefined-env-child\n* undefined-global",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "luadoc": {
                    "default": "Fallback",
                    "description": "* circle-doc-class\n* doc-field-no-class\n* duplicate-doc-alias\n* duplicate-doc-field\n* duplicate-doc-param\n* undefined-doc-class\n* undefined-doc-name\n* undefined-doc-param\n* unknown-cast-variable\n* unknown-diag-code\n* unknown-operator",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "redefined": {
                    "default": "Fallback",
                    "description": "* redefined-local",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strict": {
                    "default": "Fallback",
                    "description": "* close-non-object\n* deprecated\n* discard-returns\n* invisible",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "strong": {
                    "default": "Fallback",
                    "description": "* no-unknown",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "type-check": {
                    "default": "Fallback",
                    "description": "* assign-type-mismatch\n* cast-local-type\n* cast-type-mismatch\n* need-check-nil\n* param-type-mismatch\n* return-type-mismatch\n* undefined-field",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unbalanced": {
                    "default": "Fallback",
                    "description": "* missing-parameter\n* missing-return\n* missing-return-value\n* redundant-parameter\n* redundant-return-value\n* redundant-value\n* unbalanced-assignments",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                },
                "unused": {
                    "default": "Fallback",
                    "description": "* code-after-break\n* empty-block\n* redundant-return\n* trailing-space\n* unreachable-code\n* unused-function\n* unused-label\n* unused-local\n* unused-vararg",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Fallback"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "groupSeverity",
            "type": "object"
        },
        "diagnostics.ignoredFiles": {
            "default": "Opened",
            "enum": [
                "Enable",
                "Opened",
                "Disable"
            ],
            "markdownDescription": "如何診斷被忽略的檔案。",
            "markdownEnumDescriptions": [
                "總是診斷這些檔案。",
                "只有打開這些檔案時才會診斷。",
                "不診斷這些檔案。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "diagnostics.libraryFiles": {
            "default": "Opened",
            "enum": [
                "Enable",
                "Opened",
                "Disable"
            ],
            "markdownDescription": "如何診斷透過 `Lua.workspace.library` 載入的檔案。",
            "markdownEnumDescriptions": [
                "總是診斷這些檔案。",
                "只有打開這些檔案時才會診斷。",
                "不診斷這些檔案。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "diagnostics.neededFileStatus": {
            "additionalProperties": false,
            "markdownDescription": "* Opened:  只診斷打開的檔案\n* Any:     診斷所有檔案\n* None:    停用此診斷\n\n以 `!` 結尾的設定優先順序高於組設定 `diagnostics.groupFileStatus`。\n",
            "properties": {
                "ambiguity-1": {
                    "default": "Any",
                    "description": "優先順序歧義，如： `num or 0 + 1` ，推測使用者的實際期望為 `(num or 0) + 1`",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "assign-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "await-in-sync": {
                    "default": "None",
                    "description": "Enable diagnostics for calls of asynchronous functions within a synchronous function.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "cast-local-type": {
                    "default": "Opened",
                    "description": "Enable diagnostics for casts of local variables where the target type does not match the defined type.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "cast-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for casts where the target type does not match the initial type.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "circle-doc-class": {
                    "default": "Any",
                    "description": "%config.diagnostics.circle-doc-class%",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "close-non-object": {
                    "default": "Any",
                    "description": "Enable diagnostics for attempts to close a variable with a non-object.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "code-after-break": {
                    "default": "Opened",
                    "description": "Enable diagnostics for code placed after a break statement in a loop.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "codestyle-check": {
                    "default": "None",
                    "description": "Enable diagnostics for incorrectly styled lines.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "count-down-loop": {
                    "default": "Any",
                    "description": "Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "deprecated": {
                    "default": "Any",
                    "description": "Enable diagnostics to highlight deprecated API.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "different-requires": {
                    "default": "Any",
                    "description": "Enable diagnostics for files which are required by two different paths.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "discard-returns": {
                    "default": "Any",
                    "description": "Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "doc-field-no-class": {
                    "default": "Any",
                    "description": "Enable diagnostics to highlight a field annotation without a defining class annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-alias": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated alias annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-field": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated field annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-param": {
                    "default": "Any",
                    "description": "Enable diagnostics for a duplicated param annotation name.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-index": {
                    "default": "Any",
                    "description": "在字面常數表中重複定義了索引",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "duplicate-set-field": {
                    "default": "Opened",
                    "description": "Enable diagnostics for setting the same field in a class more than once.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "empty-block": {
                    "default": "Opened",
                    "description": "空程式碼區塊",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "global-in-nil-env": {
                    "default": "Any",
                    "description": "不能使用全域變數（ `_ENV` 被設定為 `nil`）",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "invisible": {
                    "default": "Any",
                    "description": "%config.diagnostics.invisible%",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "lowercase-global": {
                    "default": "Any",
                    "description": "首字母小寫的全域變數定義",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-parameter": {
                    "default": "Any",
                    "description": "Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-return": {
                    "default": "Any",
                    "description": "Enable diagnostics for functions with return annotations which have no return statement.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "missing-return-value": {
                    "default": "Any",
                    "description": "Enable diagnostics for return statements without values although the containing function declares returns.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "need-check-nil": {
                    "default": "Opened",
                    "description": "Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "newfield-call": {
                    "default": "Any",
                    "description": "在字面常數表中，2行程式碼之間缺少分隔符，在語法上被解析為了一次索引操作",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "newline-call": {
                    "default": "Any",
                    "description": "以 `(` 開始的新行，在語法上被解析為了上一行的函式呼叫",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "no-unknown": {
                    "default": "None",
                    "description": "Enable diagnostics for cases in which the type cannot be inferred.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "not-yieldable": {
                    "default": "None",
                    "description": "Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "param-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redefined-local": {
                    "default": "Opened",
                    "description": "重複定義的區域變數",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-parameter": {
                    "default": "Any",
                    "description": "函式呼叫時，傳入了多餘的引數",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-return": {
                    "default": "Opened",
                    "description": "Enable diagnostics for return statements which are not needed because the function would exit on its own.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-return-value": {
                    "default": "Any",
                    "description": "Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "redundant-value": {
                    "default": "Any",
                    "description": "賦值操作時，值的數量比被賦值的對象多",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "return-type-mismatch": {
                    "default": "Opened",
                    "description": "Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "spell-check": {
                    "default": "None",
                    "description": "Enable diagnostics for typos in strings.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "trailing-space": {
                    "default": "Opened",
                    "description": "後置空格",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unbalanced-assignments": {
                    "default": "Any",
                    "description": "Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-class": {
                    "default": "Any",
                    "description": "Enable diagnostics for class annotations in which an undefined class is referenced.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-name": {
                    "default": "Any",
                    "description": "Enable diagnostics for type annotations referencing an undefined type or alias.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-doc-param": {
                    "default": "Any",
                    "description": "Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-env-child": {
                    "default": "Any",
                    "description": "`_ENV` 被設定為了新的字面常數表，但是試圖獲取的全域變數不在這張表中",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-field": {
                    "default": "Opened",
                    "description": "Enable diagnostics for cases in which an undefined field of a variable is read.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "undefined-global": {
                    "default": "Any",
                    "description": "未定義的全域變數",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-cast-variable": {
                    "default": "Any",
                    "description": "Enable diagnostics for casts of undefined variables.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-diag-code": {
                    "default": "Any",
                    "description": "Enable diagnostics in cases in which an unknown diagnostics code is entered.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unknown-operator": {
                    "default": "Any",
                    "description": "Enable diagnostics for unknown operators.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unreachable-code": {
                    "default": "Opened",
                    "description": "Enable diagnostics for unreachable code.",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-function": {
                    "default": "Opened",
                    "description": "未使用的函式",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-label": {
                    "default": "Opened",
                    "description": "未使用的標籤",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-local": {
                    "default": "Opened",
                    "description": "未使用的區域變數",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                },
                "unused-vararg": {
                    "default": "Opened",
                    "description": "未使用的不定引數",
                    "enum": [
                        "Any",
                        "Opened",
                        "None",
                        "Any!",
                        "Opened!",
                        "None!"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "neededFileStatus",
            "type": "object"
        },
        "diagnostics.severity": {
            "additionalProperties": false,
            "markdownDescription": "修改診斷等級。\n以 `!` 結尾的設定優先順序高於組設定 `diagnostics.groupSeverity`。\n",
            "properties": {
                "ambiguity-1": {
                    "default": "Warning",
                    "description": "優先順序歧義，如： `num or 0 + 1` ，推測使用者的實際期望為 `(num or 0) + 1`",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "assign-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for assignments in which the value's type does not match the type of the assigned variable.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "await-in-sync": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls of asynchronous functions within a synchronous function.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "cast-local-type": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts of local variables where the target type does not match the defined type.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "cast-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts where the target type does not match the initial type.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "circle-doc-class": {
                    "default": "Warning",
                    "description": "%config.diagnostics.circle-doc-class%",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "close-non-object": {
                    "default": "Warning",
                    "description": "Enable diagnostics for attempts to close a variable with a non-object.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "code-after-break": {
                    "default": "Hint",
                    "description": "Enable diagnostics for code placed after a break statement in a loop.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "codestyle-check": {
                    "default": "Warning",
                    "description": "Enable diagnostics for incorrectly styled lines.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "count-down-loop": {
                    "default": "Warning",
                    "description": "Enable diagnostics for `for` loops which will never reach their max/limit because the loop is incrementing instead of decrementing.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "deprecated": {
                    "default": "Warning",
                    "description": "Enable diagnostics to highlight deprecated API.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "different-requires": {
                    "default": "Warning",
                    "description": "Enable diagnostics for files which are required by two different paths.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "discard-returns": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls of functions annotated with `---@nodiscard` where the return values are ignored.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "doc-field-no-class": {
                    "default": "Warning",
                    "description": "Enable diagnostics to highlight a field annotation without a defining class annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-alias": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated alias annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated field annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-doc-param": {
                    "default": "Warning",
                    "description": "Enable diagnostics for a duplicated param annotation name.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-index": {
                    "default": "Warning",
                    "description": "在字面常數表中重複定義了索引",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "duplicate-set-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for setting the same field in a class more than once.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "empty-block": {
                    "default": "Hint",
                    "description": "空程式碼區塊",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "global-in-nil-env": {
                    "default": "Warning",
                    "description": "不能使用全域變數（ `_ENV` 被設定為 `nil`）",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "invisible": {
                    "default": "Warning",
                    "description": "%config.diagnostics.invisible%",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "lowercase-global": {
                    "default": "Information",
                    "description": "首字母小寫的全域變數定義",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-parameter": {
                    "default": "Warning",
                    "description": "Enable diagnostics for function calls where the number of arguments is less than the number of annotated function parameters.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-return": {
                    "default": "Warning",
                    "description": "Enable diagnostics for functions with return annotations which have no return statement.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "missing-return-value": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return statements without values although the containing function declares returns.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "need-check-nil": {
                    "default": "Warning",
                    "description": "Enable diagnostics for variable usages if `nil` or an optional (potentially `nil`) value was assigned to the variable before.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "newfield-call": {
                    "default": "Warning",
                    "description": "在字面常數表中，2行程式碼之間缺少分隔符，在語法上被解析為了一次索引操作",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "newline-call": {
                    "default": "Warning",
                    "description": "以 `(` 開始的新行，在語法上被解析為了上一行的函式呼叫",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "no-unknown": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which the type cannot be inferred.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "not-yieldable": {
                    "default": "Warning",
                    "description": "Enable diagnostics for calls to `coroutine.yield()` when it is not permitted.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "param-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for function calls where the type of a provided parameter does not match the type of the annotated function definition.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redefined-local": {
                    "default": "Hint",
                    "description": "重複定義的區域變數",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-parameter": {
                    "default": "Warning",
                    "description": "函式呼叫時，傳入了多餘的引數",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-return": {
                    "default": "Hint",
                    "description": "Enable diagnostics for return statements which are not needed because the function would exit on its own.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-return-value": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return statements which return an extra value which is not specified by a return annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "redundant-value": {
                    "default": "Warning",
                    "description": "賦值操作時，值的數量比被賦值的對象多",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "return-type-mismatch": {
                    "default": "Warning",
                    "description": "Enable diagnostics for return values whose type does not match the type declared in the corresponding return annotation.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "spell-check": {
                    "default": "Information",
                    "description": "Enable diagnostics for typos in strings.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "trailing-space": {
                    "default": "Hint",
                    "description": "後置空格",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unbalanced-assignments": {
                    "default": "Warning",
                    "description": "Enable diagnostics on multiple assignments if not all variables obtain a value (e.g., `local x,y = 1`).",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-class": {
                    "default": "Warning",
                    "description": "Enable diagnostics for class annotations in which an undefined class is referenced.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-name": {
                    "default": "Warning",
                    "description": "Enable diagnostics for type annotations referencing an undefined type or alias.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-doc-param": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which a parameter annotation is given without declaring the parameter in the function definition.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-env-child": {
                    "default": "Information",
                    "description": "`_ENV` 被設定為了新的字面常數表，但是試圖獲取的全域變數不在這張表中",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-field": {
                    "default": "Warning",
                    "description": "Enable diagnostics for cases in which an undefined field of a variable is read.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "undefined-global": {
                    "default": "Warning",
                    "description": "未定義的全域變數",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-cast-variable": {
                    "default": "Warning",
                    "description": "Enable diagnostics for casts of undefined variables.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-diag-code": {
                    "default": "Warning",
                    "description": "Enable diagnostics in cases in which an unknown diagnostics code is entered.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unknown-operator": {
                    "default": "Warning",
                    "description": "Enable diagnostics for unknown operators.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unreachable-code": {
                    "default": "Hint",
                    "description": "Enable diagnostics for unreachable code.",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-function": {
                    "default": "Hint",
                    "description": "未使用的函式",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-label": {
                    "default": "Hint",
                    "description": "未使用的標籤",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-local": {
                    "default": "Hint",
                    "description": "未使用的區域變數",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                },
                "unused-vararg": {
                    "default": "Hint",
                    "description": "未使用的不定引數",
                    "enum": [
                        "Error",
                        "Warning",
                        "Information",
                        "Hint",
                        "Error!",
                        "Warning!",
                        "Information!",
                        "Hint!"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "severity",
            "type": "object"
        },
        "diagnostics.unusedLocalExclude": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Do not diagnose `unused-local` when the variable name matches the following pattern.",
            "scope": "resource",
            "type": "array"
        },
        "diagnostics.workspaceDelay": {
            "default": 3000,
            "markdownDescription": "進行工作區診斷的延遲（毫秒）。",
            "scope": "resource",
            "type": "integer"
        },
        "diagnostics.workspaceEvent": {
            "default": "OnSave",
            "enum": [
                "OnChange",
                "OnSave",
                "None"
            ],
            "markdownDescription": "Set the time to trigger workspace diagnostics.",
            "markdownEnumDescriptions": [
                "Trigger workspace diagnostics when the file is changed.",
                "Trigger workspace diagnostics when the file is saved.",
                "Disable workspace diagnostics."
            ],
            "scope": "resource",
            "type": "string"
        },
        "diagnostics.workspaceRate": {
            "default": 100,
            "markdownDescription": "工作區診斷的執行速率（百分比）。降低該值會減少CPU使用率，但是也會降低工作區診斷的速度。你目前正在編輯的檔案的診斷總是全速完成，不受該選項影響。",
            "scope": "resource",
            "type": "integer"
        },
        "doc": {
            "properties": {
                "packageName": {
                    "$ref": "#/properties/doc.packageName"
                },
                "privateName": {
                    "$ref": "#/properties/doc.privateName"
                },
                "protectedName": {
                    "$ref": "#/properties/doc.protectedName"
                }
            }
        },
        "doc.packageName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as package, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are package, witch can only be accessed in the file where the definition is located.",
            "scope": "resource",
            "type": "array"
        },
        "doc.privateName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as private, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are private, witch can only be accessed in the class where the definition is located.",
            "scope": "resource",
            "type": "array"
        },
        "doc.protectedName": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Treat specific field names as protected, e.g. `m_*` means `XXX.m_id` and `XXX.m_type` are protected, witch can only be accessed in the class where the definition is located and its subclasses.",
            "scope": "resource",
            "type": "array"
        },
        "format": {
            "properties": {
                "defaultConfig": {
                    "$ref": "#/properties/format.defaultConfig"
                },
                "enable": {
                    "$ref": "#/properties/format.enable"
                }
            }
        },
        "format.defaultConfig": {
            "additionalProperties": false,
            "default": {},
            "markdownDescription": "預設的格式化組態，優先順序低於工作區內的 `.editorconfig` 檔案。\n請查閱[格式化文件](https://github.com/CppCXY/EmmyLuaCodeStyle/tree/master/docs)了解用法。\n",
            "patternProperties": {
                ".*": {
                    "default": "",
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "defaultConfig",
            "type": "object"
        },
        "format.enable": {
            "default": true,
            "markdownDescription": "啟用程式碼格式化程式。",
            "scope": "resource",
            "type": "boolean"
        },
        "hint": {
            "properties": {
                "arrayIndex": {
                    "$ref": "#/properties/hint.arrayIndex"
                },
                "await": {
                    "$ref": "#/properties/hint.await"
                },
                "enable": {
                    "$ref": "#/properties/hint.enable"
                },
                "paramName": {
                    "$ref": "#/properties/hint.paramName"
                },
                "paramType": {
                    "$ref": "#/properties/hint.paramType"
                },
                "semicolon": {
                    "$ref": "#/properties/hint.semicolon"
                },
                "setType": {
                    "$ref": "#/properties/hint.setType"
                }
            }
        },
        "hint.arrayIndex": {
            "default": "Auto",
            "enum": [
                "Enable",
                "Auto",
                "Disable"
            ],
            "markdownDescription": "在建構表時提示陣列索引。",
            "markdownEnumDescriptions": [
                "所有的表中都提示陣列索引。",
                "只有表大於3項，或者表是混合類型時才進行提示。",
                "停用陣列索引提示。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "hint.await": {
            "default": true,
            "markdownDescription": "如果呼叫的函數被標記為了 `---@async`，則在呼叫處提示 `await`。",
            "scope": "resource",
            "type": "boolean"
        },
        "hint.enable": {
            "default": false,
            "markdownDescription": "啟用內嵌提示。",
            "scope": "resource",
            "type": "boolean"
        },
        "hint.paramName": {
            "default": "All",
            "enum": [
                "All",
                "Literal",
                "Disable"
            ],
            "markdownDescription": "在函式呼叫處提示參數名。",
            "markdownEnumDescriptions": [
                "所有類型的參數均進行提示。",
                "只有字面常數類型的參數進行提示。",
                "停用參數提示。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "hint.paramType": {
            "default": true,
            "markdownDescription": "在函式的參數位置提示類型。",
            "scope": "resource",
            "type": "boolean"
        },
        "hint.semicolon": {
            "default": "SameLine",
            "enum": [
                "All",
                "SameLine",
                "Disable"
            ],
            "markdownDescription": "若陳述式尾部沒有分號，則顯示虛擬分號。",
            "markdownEnumDescriptions": [
                "所有陳述式都顯示虛擬分號。",
                "兩個陳述式在同一行時，在它們之間顯示分號。",
                "停用虛擬分號。"
            ],
            "scope": "resource",
            "type": "string"
        },
        "hint.setType": {
            "default": false,
            "markdownDescription": "在賦值操作位置提示類型。",
            "scope": "resource",
            "type": "boolean"
        },
        "hover": {
            "properties": {
                "enable": {
                    "$ref": "#/properties/hover.enable"
                },
                "enumsLimit": {
                    "$ref": "#/properties/hover.enumsLimit"
                },
                "expandAlias": {
                    "$ref": "#/properties/hover.expandAlias"
                },
                "previewFields": {
                    "$ref": "#/properties/hover.previewFields"
                },
                "viewNumber": {
                    "$ref": "#/properties/hover.viewNumber"
                },
                "viewString": {
                    "$ref": "#/properties/hover.viewString"
                },
                "viewStringMax": {
                    "$ref": "#/properties/hover.viewStringMax"
                }
            }
        },
        "hover.enable": {
            "default": true,
            "markdownDescription": "啟用懸浮提示。",
            "scope": "resource",
            "type": "boolean"
        },
        "hover.enumsLimit": {
            "default": 5,
            "markdownDescription": "當值對應多個類型時，限制類型的顯示數量。",
            "scope": "resource",
            "type": "integer"
        },
        "hover.expandAlias": {
            "default": true,
            "markdownDescription": "是否展開別名。例如 `---@alias myType boolean|number` 展開後顯示為 `boolean|number`，否則顯示為 `myType'。\n",
            "scope": "resource",
            "type": "boolean"
        },
        "hover.previewFields": {
            "default": 50,
            "markdownDescription": "懸浮提示檢視表時，限制表內欄位的最大預覽數量。",
            "scope": "resource",
            "type": "integer"
        },
        "hover.viewNumber": {
            "default": true,
            "markdownDescription": "懸浮提示檢視數字內容（僅當字面常數不是十進制時）。",
            "scope": "resource",
            "type": "boolean"
        },
        "hover.viewString": {
            "default": true,
            "markdownDescription": "懸浮提示檢視字串內容（僅當字面常數包含跳脫字元時）。",
            "scope": "resource",
            "type": "boolean"
        },
        "hover.viewStringMax": {
            "default": 1000,
            "markdownDescription": "懸浮提示檢視字串內容時的最大長度。",
            "scope": "resource",
            "type": "integer"
        },
        "misc": {
            "properties": {
                "executablePath": {
                    "$ref": "#/properties/misc.executablePath"
                },
                "parameters": {
                    "$ref": "#/properties/misc.parameters"
                }
            }
        },
        "misc.executablePath": {
            "default": "",
            "markdownDescription": "Specify the executable path in VSCode.",
            "scope": "resource",
            "type": "string"
        },
        "misc.parameters": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "VSCode中啟動語言伺服時的[命令列參數](https://github.com/sumneko/lua-language-server/wiki/Getting-Started#arguments)。",
            "scope": "resource",
            "type": "array"
        },
        "runtime": {
            "properties": {
                "builtin": {
                    "$ref": "#/properties/runtime.builtin"
                },
                "fileEncoding": {
                    "$ref": "#/properties/runtime.fileEncoding"
                },
                "meta": {
                    "$ref": "#/properties/runtime.meta"
                },
                "nonstandardSymbol": {
                    "$ref": "#/properties/runtime.nonstandardSymbol"
                },
                "path": {
                    "$ref": "#/properties/runtime.path"
                },
                "pathStrict": {
                    "$ref": "#/properties/runtime.pathStrict"
                },
                "plugin": {
                    "$ref": "#/properties/runtime.plugin"
                },
                "pluginArgs": {
                    "$ref": "#/properties/runtime.pluginArgs"
                },
                "special": {
                    "$ref": "#/properties/runtime.special"
                },
                "unicodeName": {
                    "$ref": "#/properties/runtime.unicodeName"
                },
                "version": {
                    "$ref": "#/properties/runtime.version"
                }
            }
        },
        "runtime.builtin": {
            "additionalProperties": false,
            "markdownDescription": "調整內建庫的啟用狀態，你可以根據實際執行環境停用（或重新定義）不存在的庫。\n\n* `default`: 表示庫會根據執行版本啟用或停用\n* `enable`: 總是啟用\n* `disable`: 總是停用\n",
            "properties": {
                "basic": {
                    "default": "default",
                    "description": "%config.runtime.builtin.basic%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "bit": {
                    "default": "default",
                    "description": "%config.runtime.builtin.bit%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "bit32": {
                    "default": "default",
                    "description": "%config.runtime.builtin.bit32%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "builtin": {
                    "default": "default",
                    "description": "%config.runtime.builtin.builtin%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "coroutine": {
                    "default": "default",
                    "description": "%config.runtime.builtin.coroutine%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "debug": {
                    "default": "default",
                    "description": "%config.runtime.builtin.debug%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "ffi": {
                    "default": "default",
                    "description": "%config.runtime.builtin.ffi%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "io": {
                    "default": "default",
                    "description": "%config.runtime.builtin.io%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "jit": {
                    "default": "default",
                    "description": "%config.runtime.builtin.jit%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "math": {
                    "default": "default",
                    "description": "%config.runtime.builtin.math%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "os": {
                    "default": "default",
                    "description": "%config.runtime.builtin.os%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "package": {
                    "default": "default",
                    "description": "%config.runtime.builtin.package%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "string": {
                    "default": "default",
                    "description": "%config.runtime.builtin.string%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "string.buffer": {
                    "default": "default",
                    "description": "%config.runtime.builtin.string.buffer%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table.clear": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table.clear%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "table.new": {
                    "default": "default",
                    "description": "%config.runtime.builtin.table.new%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                },
                "utf8": {
                    "default": "default",
                    "description": "%config.runtime.builtin.utf8%",
                    "enum": [
                        "default",
                        "enable",
                        "disable"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "builtin",
            "type": "object"
        },
        "runtime.fileEncoding": {
            "default": "utf8",
            "enum": [
                "utf8",
                "ansi",
                "utf16le",
                "utf16be"
            ],
            "markdownDescription": "檔案編碼，選項 `ansi` 只在 `Windows` 平台下有效。",
            "markdownEnumDescriptions": [
                "%config.runtime.fileEncoding.utf8%",
                "%config.runtime.fileEncoding.ansi%",
                "%config.runtime.fileEncoding.utf16le%",
                "%config.runtime.fileEncoding.utf16be%"
            ],
            "scope": "resource",
            "type": "string"
        },
        "runtime.meta": {
            "default": "${version} ${language} ${encoding}",
            "markdownDescription": "meta檔案的目錄名稱格式",
            "scope": "resource",
            "type": "string"
        },
        "runtime.nonstandardSymbol": {
            "default": [],
            "items": {
                "enum": [
                    "//",
                    "/**/",
                    "`",
                    "+=",
                    "-=",
                    "*=",
                    "/=",
                    "%=",
                    "^=",
                    "//=",
                    "|=",
                    "&=",
                    "<<=",
                    ">>=",
                    "||",
                    "&&",
                    "!",
                    "!=",
                    "continue"
                ],
                "type": "string"
            },
            "markdownDescription": "支援非標準的符號。請務必確認你的執行環境支援這些符號。",
            "scope": "resource",
            "type": "array"
        },
        "runtime.path": {
            "default": [
                "?.lua",
                "?/init.lua"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "當使用 `require` 時，如何根據輸入的名字來尋找檔案。\n此選項設定為 `?/init.lua` 意味著當你輸入 `require 'myfile'` 時，會從已載入的檔案中搜尋 `{workspace}/myfile/init.lua`。\n當 `runtime.pathStrict` 設定為 `false` 時，還會嘗試搜尋 `${workspace}/**/myfile/init.lua`。\n如果你想要載入工作區以外的檔案，你需要先設定 `Lua.workspace.library`。\n",
            "scope": "resource",
            "type": "array"
        },
        "runtime.pathStrict": {
            "default": false,
            "markdownDescription": "啟用後 `runtime.path` 將只搜尋第一層目錄，見 `runtime.path` 的説明。",
            "scope": "resource",
            "type": "boolean"
        },
        "runtime.plugin": {
            "default": "",
            "markdownDescription": "延伸模組路徑，請查閱[文件](https://github.com/sumneko/lua-language-server/wiki/Plugins)瞭解用法。",
            "scope": "resource",
            "type": "string"
        },
        "runtime.pluginArgs": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "Additional arguments for the plugin.",
            "scope": "resource",
            "type": "array"
        },
        "runtime.special": {
            "additionalProperties": false,
            "default": {},
            "markdownDescription": "將自訂全域變數視為一些特殊的內建變數，語言伺服將提供特殊的支援。\n下面這個例子表示將 `include` 視為 `require` 。\n```json\n\"Lua.runtime.special\" : {\n    \"include\" : \"require\"\n}\n```\n",
            "patternProperties": {
                ".*": {
                    "default": "require",
                    "enum": [
                        "_G",
                        "rawset",
                        "rawget",
                        "setmetatable",
                        "require",
                        "dofile",
                        "loadfile",
                        "pcall",
                        "xpcall",
                        "assert",
                        "error",
                        "type"
                    ],
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "special",
            "type": "object"
        },
        "runtime.unicodeName": {
            "default": false,
            "markdownDescription": "允許在名字中使用 Unicode 字元。",
            "scope": "resource",
            "type": "boolean"
        },
        "runtime.version": {
            "default": "Lua 5.4",
            "enum": [
                "Lua 5.1",
                "Lua 5.2",
                "Lua 5.3",
                "Lua 5.4",
                "LuaJIT"
            ],
            "markdownDescription": "Lua執行版本。",
            "markdownEnumDescriptions": [
                "%config.runtime.version.Lua 5.1%",
                "%config.runtime.version.Lua 5.2%",
                "%config.runtime.version.Lua 5.3%",
                "%config.runtime.version.Lua 5.4%",
                "%config.runtime.version.LuaJIT%"
            ],
            "scope": "resource",
            "type": "string"
        },
        "semantic": {
            "properties": {
                "annotation": {
                    "$ref": "#/properties/semantic.annotation"
                },
                "enable": {
                    "$ref": "#/properties/semantic.enable"
                },
                "keyword": {
                    "$ref": "#/properties/semantic.keyword"
                },
                "variable": {
                    "$ref": "#/properties/semantic.variable"
                }
            }
        },
        "semantic.annotation": {
            "default": true,
            "markdownDescription": "對類型註解進行語義著色。",
            "scope": "resource",
            "type": "boolean"
        },
        "semantic.enable": {
            "default": true,
            "markdownDescription": "啟用語義著色。你可能需要同時將 `editor.semanticHighlighting.enabled` 設定為 `true` 才能生效。",
            "scope": "resource",
            "type": "boolean"
        },
        "semantic.keyword": {
            "default": false,
            "markdownDescription": "對關鍵字/字面常數/運算子進行語義著色。只有當你的編輯器無法進行語法著色時才需要啟用此功能。",
            "scope": "resource",
            "type": "boolean"
        },
        "semantic.variable": {
            "default": true,
            "markdownDescription": "對變數/欄位/參數進行語義著色。",
            "scope": "resource",
            "type": "boolean"
        },
        "signatureHelp": {
            "properties": {
                "enable": {
                    "$ref": "#/properties/signatureHelp.enable"
                }
            }
        },
        "signatureHelp.enable": {
            "default": true,
            "markdownDescription": "啟用參數提示。",
            "scope": "resource",
            "type": "boolean"
        },
        "spell": {
            "properties": {
                "dict": {
                    "$ref": "#/properties/spell.dict"
                }
            }
        },
        "spell.dict": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "拼寫檢查的自訂單詞。",
            "scope": "resource",
            "type": "array"
        },
        "telemetry": {
            "properties": {
                "enable": {
                    "$ref": "#/properties/telemetry.enable"
                }
            }
        },
        "telemetry.enable": {
            "default": null,
            "markdownDescription": "啟用遙測，透過網路發送你的編輯器資訊與錯誤日誌。在[此處](https://github.com/sumneko/lua-language-server/wiki/Home#privacy)閱讀我們的隱私聲明。\n",
            "scope": "resource",
            "tags": [
                "telemetry"
            ],
            "type": [
                "boolean",
                "null"
            ]
        },
        "type": {
            "properties": {
                "castNumberToInteger": {
                    "$ref": "#/properties/type.castNumberToInteger"
                },
                "weakNilCheck": {
                    "$ref": "#/properties/type.weakNilCheck"
                },
                "weakUnionCheck": {
                    "$ref": "#/properties/type.weakUnionCheck"
                }
            }
        },
        "type.castNumberToInteger": {
            "default": true,
            "markdownDescription": "允許將 `number` 類型賦值給 `integer` 類型。",
            "scope": "resource",
            "type": "boolean"
        },
        "type.weakNilCheck": {
            "default": false,
            "markdownDescription": "When checking the type of union type, ignore the `nil` in it.\n\nWhen this setting is `false`, the `number|nil` type cannot be assigned to the `number` type. It can be with `true`.\n",
            "scope": "resource",
            "type": "boolean"
        },
        "type.weakUnionCheck": {
            "default": false,
            "markdownDescription": "同位類型中只要有一個子類型滿足條件，則同位類型也滿足條件。\n\n此設定為 `false` 時，`number|boolean` 類型無法賦給 `number` 類型；為 `true` 時則可以。\n",
            "scope": "resource",
            "type": "boolean"
        },
        "typeFormat": {
            "properties": {
                "config": {
                    "$ref": "#/properties/typeFormat.config"
                }
            }
        },
        "typeFormat.config": {
            "additionalProperties": false,
            "markdownDescription": "%config.typeFormat.config%",
            "properties": {
                "auto_complete_end": {
                    "default": "true",
                    "description": "%config.typeFormat.config.auto_complete_end%",
                    "type": "string"
                },
                "auto_complete_table_sep": {
                    "default": "true",
                    "description": "%config.typeFormat.config.auto_complete_table_sep%",
                    "type": "string"
                },
                "format_line": {
                    "default": "true",
                    "description": "%config.typeFormat.config.format_line%",
                    "type": "string"
                }
            },
            "scope": "resource",
            "title": "config",
            "type": "object"
        },
        "window": {
            "properties": {
                "progressBar": {
                    "$ref": "#/properties/window.progressBar"
                },
                "statusBar": {
                    "$ref": "#/properties/window.statusBar"
                }
            }
        },
        "window.progressBar": {
            "default": true,
            "markdownDescription": "在狀態欄顯示進度條。",
            "scope": "resource",
            "type": "boolean"
        },
        "window.statusBar": {
            "default": true,
            "markdownDescription": "在狀態欄顯示延伸模組狀態。",
            "scope": "resource",
            "type": "boolean"
        },
        "workspace": {
            "properties": {
                "checkThirdParty": {
                    "$ref": "#/properties/workspace.checkThirdParty"
                },
                "ignoreDir": {
                    "$ref": "#/properties/workspace.ignoreDir"
                },
                "ignoreSubmodules": {
                    "$ref": "#/properties/workspace.ignoreSubmodules"
                },
                "library": {
                    "$ref": "#/properties/workspace.library"
                },
                "maxPreload": {
                    "$ref": "#/properties/workspace.maxPreload"
                },
                "preloadFileSize": {
                    "$ref": "#/properties/workspace.preloadFileSize"
                },
                "supportScheme": {
                    "$ref": "#/properties/workspace.supportScheme"
                },
                "useGitIgnore": {
                    "$ref": "#/properties/workspace.useGitIgnore"
                },
                "userThirdParty": {
                    "$ref": "#/properties/workspace.userThirdParty"
                }
            }
        },
        "workspace.checkThirdParty": {
            "default": true,
            "markdownDescription": "自動偵測與適應第三方庫，目前支援的庫為：\n\n* OpenResty\n* Cocos4.0\n* LÖVE\n* LÖVR\n* skynet\n* Jass\n",
            "scope": "resource",
            "type": "boolean"
        },
        "workspace.ignoreDir": {
            "default": [
                ".vscode"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "忽略的檔案與目錄（使用 `.gitignore` 語法）。",
            "scope": "resource",
            "type": "array"
        },
        "workspace.ignoreSubmodules": {
            "default": true,
            "markdownDescription": "忽略子模組。",
            "scope": "resource",
            "type": "boolean"
        },
        "workspace.library": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "除了目前工作區以外，還會從哪些目錄中載入檔案。這些目錄中的檔案將被視作外部提供的程式碼庫，部分操作（如重新命名欄位）不會修改這些檔案。",
            "scope": "resource",
            "type": "array"
        },
        "workspace.maxPreload": {
            "default": 5000,
            "markdownDescription": "最大預載入檔案數。",
            "scope": "resource",
            "type": "integer"
        },
        "workspace.preloadFileSize": {
            "default": 500,
            "markdownDescription": "預載入時跳過大小大於該值（KB）的檔案。",
            "scope": "resource",
            "type": "integer"
        },
        "workspace.supportScheme": {
            "default": [
                "file",
                "untitled",
                "git"
            ],
            "items": {
                "type": "string"
            },
            "markdownDescription": "為以下 `scheme` 的lua檔案提供語言伺服。",
            "scope": "resource",
            "type": "array"
        },
        "workspace.useGitIgnore": {
            "default": true,
            "markdownDescription": "忽略 `.gitignore` 中列舉的檔案。",
            "scope": "resource",
            "type": "boolean"
        },
        "workspace.userThirdParty": {
            "default": [],
            "items": {
                "type": "string"
            },
            "markdownDescription": "在這裡添加私有的第三方庫適應檔案路徑，請參考內建的[組態檔案路徑](https://github.com/sumneko/lua-language-server/tree/master/meta/3rd)",
            "scope": "resource",
            "type": "array"
        }
    },
    "title": "setting",
    "type": "object"
}