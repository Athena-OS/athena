# Credits BlackArch ( https://www.blackarch.org/ ).
# See COPYING for license details.

pkgname=arkime
pkgver=last.commit.r0.gb23fe72
pkgrel=1
pkgdesc='An open source large scale IPv4 full PCAP capturing, indexing and database system.'
url='https://github.com/arkime/arkime'
groups=('athena' 'athena-networking')
arch=('x86_64' 'aarch64')
license=('Apache-2.0')
options=('!strip')
depends=('ruby' 'perl' 'perl-test-differences' 'lua' 'geoip' 'yara' 'file'
         'libpcap' 'libmaxminddb' 'libnet' 'libtool' 'gettext'
         'perl-http-message' 'perl-lwp-protocol-https' 'perl-json'
         'perl-socket6' 'perl-clone' 'perl-html-parser' 'zstd' 'openssl-1.1'
         'pcre' 'librdkafka')
makedepends=('git' 'gcc' 'glib2' 'nodejs-lts-iron')
_dataroot="/usr/share/arkime"
#source=("https://github.com/arkime/$pkgname/archive/v$pkgver.tar.gz")
source=("git+https://github.com/arkime/$pkgname.git")
sha512sums=('SKIP')

pkgver() {
  cd $pkgname

  ( set -o pipefail
    git describe --long --tags --abbrev=7 2>/dev/null |
      sed 's/\([^-]*-g\)/r\1/;s/-/./g' ||
    printf "%s.%s" "$(git rev-list --count HEAD)" \
      "$(git rev-parse --short=7 HEAD)"
  )
}

prepare() {
  cd $pkgname

  sed -i 's|/data/moloch/etc/|/etc/moloch/|g' $(grep -rl '/data/moloch/etc/')

  # Change the location files expect the arkime data root to be from
  # /data/moloch to $_dataroot
  # Note that the repository still uses moloch string (old name of Arkime) on /data/
  sed -i 's|/data/moloch|'"$_dataroot"'|g' $(grep -rl '/data/moloch')

  # Add $pkgdir prefix to data files
  sed -i 's|^PARSERSDIR\s*=\s*|PARSERSDIR = '"$pkgdir"'|' \
    capture/parsers/Makefile.in
  sed -i 's|^PLUGINDIR\s*=\s*|PLUGINDIR = '"$pkgdir"'|' \
    capture/plugins/Makefile.in
  sed -i 's|^DBDIR\s*=\s*|DBDIR = '"$pkgdir"'|' \
    db/Makefile.in
  sed -i 's|^VIEWERDIR\s*=\s*|VIEWERDIR = '"$pkgdir"'|;/npm update/d' \
    viewer/Makefile.in

  # Add $pkgdir prefix to binary files and specify /usr as the install prefix
  sed -i 's|^bindir\s*=\s*@prefix@|bindir = '"$pkgdir"'/usr/|' \
    capture/Makefile.in
}

build() {
  # Build arkime
  cd $pkgname

  ./bootstrap.sh
  ./configure \
    --prefix=$_dataroot \
    --bindir=/usr/bin \
    --with-zstd=yes \
    --with-libpcap=no \
    --with-yara=no \
    --with-glib2=no \
    --with-pfring=no \
    --with-curl=no \
    --with-lua=no LIBS="-lpcap -lyara -llua -lcurl" GLIB2_CFLAGS="-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include" GLIB2_LIBS="-lglib-2.0 -lgmodule-2.0 -lgobject-2.0 -lgio-2.0" \
    KAFKA_LIBS="-lrdkafka" KAFKA_CFLAGS="-I/usr/include/librdkafka" \
    --with-kafka=no

  make
}

package() {
  cd $pkgname

  install -dm 755 "$pkgdir/usr/share/$pkgname"

  make DESTDIR="$pkgdir" install

  install -Dm 644 README.md "$pkgdir/usr/share/doc/$pkgname/README.md"

  # Install the default config and move the elasticsearch example to the config
  # dir
  install -Dm 644 config.ini "$pkgdir/etc/$pkgname/config.ini"
  cd "$pkgdir"
  mv ./$_dataroot/db/elasticsearch.yml.sample etc/$pkgname/

  # Install node modules for the viewer
  # cd "./$_dataroot/viewer"
  # npm --python=/usr/bin/python update

  # Fix the node module permissions and their python path
  #cd node_modules
  #chmod 644 png/gyp/lib/*.a
  #sed -i \
  #  -re 's|#!\s*(/usr)?(/local)?/bin/.*python.*$|#!/usr/bin/env python|g' \
  #  $(egrep -rl '^\s*#!\s*(/usr)?(/local)?/bin/.*python')
}

